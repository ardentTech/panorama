package codegen

import com.squareup.kotlinpoet.FileSpec
import com.squareup.kotlinpoet.TypeSpec
import lexicon.SchemaDef

data class KFileSpecConfig(
    val defs: Map<String, SchemaDef>,
    val lexiconId: String,
    //val lexiconName: String,
    val namespace: String? = null
    // TODO specs
)

internal fun generateKFile(config: KFileSpecConfig): FileSpec {
    var description: String? = null
    val lexiconName = config.lexiconId.split(".").last().capitalize()
    val specs = mutableListOf<TypeSpec>()

    config.defs.forEach { (defName, schemaDef) ->
        // TODO codegen each spec
        if (defName == "main") description = schemaDef.description
    }

    val file = FileSpec.builder(config.namespace ?: "", lexiconName)
        .addFileComment("""
This file was generated by Panorama. DO NOT EDIT.

Lexicon: ${config.lexiconId}
${description?.let { "Description: $it" }}
                    """.trimIndent())
    // TODO specs
    return file.build()
}